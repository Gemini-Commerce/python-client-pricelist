# coding: utf-8

"""
    PriceList Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pricelist.models.list_price_lists_response_price_list import ListPriceListsResponsePriceList

class TestListPriceListsResponsePriceList(unittest.TestCase):
    """ListPriceListsResponsePriceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListPriceListsResponsePriceList:
        """Test ListPriceListsResponsePriceList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListPriceListsResponsePriceList`
        """
        model = ListPriceListsResponsePriceList()
        if include_optional:
            return ListPriceListsResponsePriceList(
                id = '',
                grn = '',
                code = '',
                name = '',
                description = '',
                is_active = True,
                is_default = True,
                currency = 'XXX',
                vat_included = True,
                delivered_duty_paid = True,
                segments = [
                    ''
                    ],
                markets = [
                    ''
                    ],
                channels = [
                    ''
                    ],
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                type = 'UNKNOWN',
                is_system = True
            )
        else:
            return ListPriceListsResponsePriceList(
        )
        """

    def testListPriceListsResponsePriceList(self):
        """Test ListPriceListsResponsePriceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
